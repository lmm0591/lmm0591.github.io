{"meta":{"title":"技术博客","subtitle":"积累、沉淀、总结","description":"知识的沉淀","author":"Li Mingmin","url":"http://yoursite.com"},"pages":[{"title":"每周收藏","date":"2018-08-30T08:56:20.000Z","updated":"2018-10-11T16:11:18.456Z","comments":true,"path":"post-weekly/index.html","permalink":"http://yoursite.com/post-weekly/index.html","excerpt":"","text":"第 1 周 (2018-08-30) JavaScript 引擎基础：Shapes 和 Inline Caches JavaScript 引擎基础：原型优化 Web 应用架构入门之 11 个基本要素 精读 The Cost of JavaScript 有关React，你需要知道的一切 第 2 周 (2018-09-04) 学习技术的三部曲：WHAT、HOW、WHY 5分钟彻底理解Object.keys 一口（很长的）气了解 babel JavaScript essentials: why you should know how the engine works (翻墙) 不止代码（PDF） 【译】什么时候应该 Server-Side Render？ “服务端渲染”吊打“客户端渲染”的那些事 让你的Webpack起飞—考拉会员后台Webpack优化实战 如何”有效“减小js包的体积 写给工程师的十条精进原则 带你彻底弄懂Event Loop AST 抽象语法树——最基础的 JavaScript 重点知识 第 3 周 (2018-09-12) 精读《React Router4.0 进阶概念》 react router 转场动画 你不知道的 React Router 4 Create and share beautiful images of your source code JavaScript 为什么快——第一篇 JavaScript 为什么快–第二篇 React v16.3之后的组件生命周期函数 深入探究Immutable.js的实现机制 第 4 周 (2018-09-17) 带你玩转prefetch, preload, dns-prefetch，defer和async 彻底搞懂HTTPS的加密机制 Immutable.js 以及在 react+redux 项目中的实践 React 16.3来了：带着全新的Context API 为什么说React 16是开发者的福音？ JavaScript 的成本 详解React Native动画 第 5 周 (2018-09-24) node插件http-proxy实现反向代理 nodemon koa 第 6 周 (2018-10-01) 浮点数的二进制表示 为什么0.1+0.2=0.30000000000000004而1.1+2.2=3.3000000000000003？ 二进制十进制间小数怎么转换 第 7 周 (2018-10-08) 学前端，我如何一年内学到三年的知识 React 性能分析器介绍 精读《12 个评估 JS 库你需要关心的事》 一个程序员的成长之路 The State of React Native (2018)"}],"posts":[{"title":"awesome react native","slug":"awesome-react-native","date":"2018-10-30T08:24:00.000Z","updated":"2018-10-10T08:04:34.498Z","comments":true,"path":"2018/10/30/awesome-react-native/","link":"","permalink":"http://yoursite.com/2018/10/30/awesome-react-native/","excerpt":"","text":"react-native-gifted-chat","categories":[],"tags":[{"name":"awesome","slug":"awesome","permalink":"http://yoursite.com/tags/awesome/"},{"name":"react native","slug":"react-native","permalink":"http://yoursite.com/tags/react-native/"}]},{"title":"brew 简介","slug":"brew","date":"2018-09-20T15:34:28.000Z","updated":"2018-09-21T01:36:19.100Z","comments":true,"path":"2018/09/20/brew/","link":"","permalink":"http://yoursite.com/2018/09/20/brew/","excerpt":"","text":"一、简介brew 是一个软件包管理工具,类似于 centos 下的 yum 或者 ubuntu 下的 apt-get,非常方便,免去了自己手动编译安装的不便 brew 安装目录 /usr/local/Cellar brew 配置目录 /usr/local/etc brew 命令目录 /usr/local/bin (注:homebrew在安装完成后自动在/usr/local/bin加个软连接，所以平常都是用这个路径) 二、安装1ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" 三、常用命令12345678910111213141516171819brew install mysql //安装mysqlbrew search mysql //搜索mysqlbrew info mysql // 查找mysql相关信息brew update //更新自己的Homebrewbrew outdated //会显示哪些软件可以升级brew upgrade //升级所有软件（后面不加名字）brew upgrade mysql // 升级mysql软件brew list //显示已经安装的软件brew uninstall xx //卸载某些软件brew cleanup //定期清理一些安装包缓存 四、brew cask 的常用命令安装完 brew 时，brew-cask 已经安装好了，无需自行安装。 1234567brew cask search # 列出所有可以被安装的软件brew cask search name # 查找所有和 name相关的应用brew cask install name # 下载安装软件brew cask uninstall name # 卸载软件brew cask info app # 列出应用的信息brew cask list # 列出本机按照过的软件列表brew cask cleanup # 清除下载的缓存以及各种链接信息 五、更新 brew cask 及通过 brew-cask 安装的程序12brew update &amp;&amp; brew upgrade brew-cask #更新cask自身brew cask uninstall name &amp;&amp; brew cask install name ＃更新程序 六、常用软件12brew cask install launchrocket #非常友好的 brew 服务 图形界面brew cask install cakebrew #非常友好的 brew 包管理图形界面","categories":[],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://yoursite.com/tags/Mac/"}]},{"title":"关于 /etc/hosts 文件","slug":"about-hosts-file","date":"2018-09-20T05:10:41.000Z","updated":"2018-09-20T05:26:22.507Z","comments":true,"path":"2018/09/20/about-hosts-file/","link":"","permalink":"http://yoursite.com/2018/09/20/about-hosts-file/","excerpt":"","text":"主机名 ip 配置文件hosts—The static table lookup for host name(主机名查询静态表) linux 的 /etc/hosts 是配置 ip 地址和其对应主机名的文件，不同的linux版本，这个配置文件也可能不同。比如 Debian 的对应文件时 /etc/hostname。 配置文件的用途这个文件可以配置主机 IP 及其对应的主机名，可以减少 DNS 查询，节省时间， linux 主机名的相关配置文件就是 /etc/hosts 这个文件告诉主机那些域名对应那些ip 比如文件中有这样的定义 1192.168.1.100 linumu100 test100 假设 192.168.1.100 是一台网站服务器，在网页中输入 http://linumu100 或 http://test1000 就会打开 192.168.1.100 的网页。 配置文件格式说明一般/etc/hosts的内容一般有如下类似内容：123456789### Host Database## localhost is used to configure the loopback interface# when the system is booting. Do not change this entry.##127.0.0.1 localhost255.255.255.255 broadcasthost::1 localhost 一般情况下hosts文件的每行尾一个主机，每行由三部分组成，每个部分由空格隔开。 第一部分：网络IP地址；第二部分：主机名或域名；第三部分：主机名别名； 当然每行也可以是两部分，即主机IP地址和主机名。 主机名（hostname) 和 域名（domain)的区别：主机名通常在局域网内使用，通过hosts文件，主机名就被解析到对应IP;域名通常在INTERNET上使用，但如果本机不想使用internet上的域名解析，这时就可以更改hosts文件，加入自己的域名解析。 hosts文件可以帮助解决哪些问题 加快域名解析 开发测试 mock 线上域名环境，可以充当部份 fiddler 的功能","categories":[],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://yoursite.com/tags/Mac/"}]},{"title":"awesome node","slug":"awesome-node","date":"2018-09-18T17:06:47.000Z","updated":"2018-09-20T05:03:00.175Z","comments":true,"path":"2018/09/19/awesome-node/","link":"","permalink":"http://yoursite.com/2018/09/19/awesome-node/","excerpt":"","text":"A node.js library to automate chrome/chromium browser","categories":[],"tags":[{"name":"awesome","slug":"awesome","permalink":"http://yoursite.com/tags/awesome/"},{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"}]},{"title":"awesome react","slug":"awesome-react","date":"2018-08-30T08:24:00.000Z","updated":"2018-09-23T14:42:51.886Z","comments":true,"path":"2018/08/30/awesome-react/","link":"","permalink":"http://yoursite.com/2018/08/30/awesome-react/","excerpt":"","text":"Google’s Material Design react-loadable react router 转场动画 react-native-sglistview","categories":[],"tags":[{"name":"awesome","slug":"awesome","permalink":"http://yoursite.com/tags/awesome/"},{"name":"react","slug":"react","permalink":"http://yoursite.com/tags/react/"}]}]}